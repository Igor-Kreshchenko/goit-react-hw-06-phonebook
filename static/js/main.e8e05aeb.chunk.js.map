{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","App.module.css","components/Section/Section.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","actions","addContact","createAction","payload","id","name","number","deleteContact","filterContacts","ContactForm","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","uuidv4","props","contacts","items","map","item","includes","alert","onSubmit","resetForm","this","label","input","type","pattern","required","onChange","button","Component","connect","dispatch","ContactItem","onClick","filter","normalizedFilter","toLowerCase","list","contact","App","wrapper","itemsReducer","createReducer","filterReducer","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","storePersistor","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e8e05aeb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3E4jV\",\"title\":\"Section_title__NXVAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1pvRw\",\"input\":\"Filter_input__2evkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3M1u8\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ id, name, number }) => ({\r\n  payload: {\r\n    id,\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst filterContacts = createAction('contacts/filter');\r\n\r\nconst actions = { addContact, deleteContact, filterContacts };\r\n\r\nexport default actions;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const id = uuidv4();\r\n    const { name } = this.state;\r\n    const contacts = this.props.contacts.items;\r\n    const names = contacts.map(item => item.name);\r\n\r\n    names.includes(name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.props.onSubmit({ id: id, ...this.state });\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, handleChange } = this;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => state;\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: value => {\r\n    return dispatch(actions.addContact(value));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactList.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.number}>{number}</p>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => onClick(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport { connect } from 'react-redux';\r\nimport ContactItem from './ContactItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(contact => {\r\n        const { id, name, number } = contact;\r\n\r\n        return (\r\n          <ContactItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onClick={onClick}\r\n            id={id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst filterContacts = (items, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(item =>\r\n    item.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: filterContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: ({ target }) => dispatch(actions.filterContacts(target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Section from './components/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport styles from './App.module.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  },\r\n);\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storePersistor = { store, persistor };\r\n\r\nexport default storePersistor;\r\n","import './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Xqn7\",\"item\":\"ContactList_item__Rn9eq\",\"name\":\"ContactList_name__2qOLg\",\"number\":\"ContactList_number__1A4XK\",\"button\":\"ContactList_button__3qHNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3sgV-\",\"input\":\"ContactForm_input__2a49Z\",\"button\":\"ContactForm_button__32kqF\"};"],"sourceRoot":""}