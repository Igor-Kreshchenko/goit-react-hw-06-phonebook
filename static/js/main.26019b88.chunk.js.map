{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","types","ADD","DELETE","FILTER","actions","addContact","id","name","number","type","actionTypes","payload","deleteContact","filterContacts","value","Section","title","children","className","styles","section","defaultProps","ContactForm","state","handleChange","event","target","setState","handleSubmit","preventDefault","uuidv4","props","onSubmit","resetForm","this","label","input","pattern","required","onChange","button","Component","connect","dispatch","ContactItem","onClick","item","items","filter","normalizedFilter","toLowerCase","includes","contacts","list","map","contact","wrapper","contactsReducer","combineReducers","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26019b88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3E4jV\",\"title\":\"Section_title__NXVAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1pvRw\",\"input\":\"Filter_input__2evkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3M1u8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Xqn7\",\"item\":\"ContactList_item__Rn9eq\",\"name\":\"ContactList_name__2qOLg\",\"number\":\"ContactList_number__1A4XK\",\"button\":\"ContactList_button__3qHNM\"};","const ADD = 'contacts/add';\r\nconst DELETE = 'contacts/delete';\r\nconst FILTER = 'contacts/filter';\r\n\r\nconst types = { ADD, DELETE, FILTER };\r\n\r\nexport default types;\r\n","import actionTypes from './contacts-types';\r\n\r\nconst addContact = ({ id, name, number }) => ({\r\n  type: actionTypes.ADD,\r\n  payload: {\r\n    id,\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = id => ({\r\n  type: actionTypes.DELETE,\r\n  payload: id,\r\n});\r\n\r\nconst filterContacts = value => ({\r\n  type: actionTypes.FILTER,\r\n  payload: value,\r\n});\r\n\r\nconst actions = { addContact, deleteContact, filterContacts };\r\n\r\nexport default actions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const id = uuidv4();\r\n\r\n    this.props.onSubmit({ id: id, ...this.state });\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, handleChange } = this;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: value => {\r\n    return dispatch(actions.addContact(value));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactList.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.number}>{number}</p>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => onClick(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport { connect } from 'react-redux';\r\nimport ContactItem from './ContactItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(contact => {\r\n        const { id, name, number } = contact;\r\n\r\n        return (\r\n          <ContactItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onClick={onClick}\r\n            id={id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst filterContacts = (items, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(item =>\r\n    item.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: filterContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: ({ target }) => dispatch(actions.filterContacts(target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from './redux/contacts/contacts-actions';\r\nimport Section from './components/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport styles from './App.module.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: {\r\n      items: state.contacts.items,\r\n      filter: state.contacts.filter,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addContact: () => dispatch(actions.addContact()),\r\n    deleteContact: id => dispatch(actions.deleteContact(id)),\r\n    filterContacts: () => dispatch(actions.filterContacts()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     contacts: [\r\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     ],\r\n//     filter: '',\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const contacts = localStorage.getItem('contacts');\r\n//     const parsedContacts = JSON.parse(contacts);\r\n\r\n//     if (parsedContacts) {\r\n//       this.setState({ contacts: parsedContacts });\r\n//     }\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const { contacts } = this.state;\r\n\r\n//     if (contacts !== prevState.contacts) {\r\n//       localStorage.setItem('contacts', JSON.stringify(contacts));\r\n//     }\r\n//   }\r\n\r\n//   formSubmitHandler = contact => {\r\n//     const { contacts } = this.state;\r\n//     const { name } = contact;\r\n//     const names = contacts.map(item => item.name);\r\n\r\n//     names.includes(name)\r\n//       ? alert(`${name} is already in contacts`)\r\n//       : this.setState(prevState => ({\r\n//           contacts: [contact, ...prevState.contacts],\r\n//         }));\r\n//   };\r\n\r\n//   onChangeFilter = event => {\r\n//     const filterValue = event.target.value;\r\n\r\n//     this.setState({ filter: filterValue });\r\n//   };\r\n\r\n//   filterContacts = () => {\r\n//     const { contacts, filter } = this.state;\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n//   };\r\n\r\n//   deleteContact = contactId => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const { filter } = this.state;\r\n//     const {\r\n//       formSubmitHandler,\r\n//       onChangeFilter,\r\n//       deleteContact,\r\n//       filterContacts,\r\n//     } = this;\r\n//     const filteredContacts = filterContacts();\r\n\r\n//     return (\r\n//       <div className={styles.wrapper}>\r\n//         <Section title=\"Phonebook\">\r\n//           <ContactForm onSubmit={formSubmitHandler} />\r\n//         </Section>\r\n\r\n//         <Section title=\"Contacts\">\r\n//           <Filter value={filter} onChange={onChangeFilter} />\r\n//           <ContactList contacts={filteredContacts} onClick={deleteContact} />\r\n//         </Section>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import { combineReducers } from 'redux';\r\nimport types from './contacts-types';\r\nimport actionTypes from './contacts-types';\r\n\r\nconst itemsReducer = (\r\n  state = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  { type, payload },\r\n) => {\r\n  switch (type) {\r\n    case actionTypes.ADD:\r\n      return [payload, ...state];\r\n\r\n    case actionTypes.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterReducer = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3sgV-\",\"input\":\"ContactForm_input__2a49Z\",\"button\":\"ContactForm_button__32kqF\"};"],"sourceRoot":""}